[{"D:\\Code\\Projects\\maze-algorithms\\src\\index.js":"1","D:\\Code\\Projects\\maze-algorithms\\src\\App.js":"2","D:\\Code\\Projects\\maze-algorithms\\src\\reportWebVitals.js":"3","D:\\Code\\Projects\\maze-algorithms\\src\\components\\AppCanvas\\index.js":"4","D:\\Code\\Projects\\maze-algorithms\\src\\components\\Controls\\index.js":"5","D:\\Code\\Projects\\maze-algorithms\\src\\utils\\SquareGrid.js":"6","D:\\Code\\Projects\\maze-algorithms\\src\\utils\\GridPoint.js":"7","D:\\Code\\Projects\\maze-algorithms\\src\\utils\\HexGrid.js":"8","D:\\Code\\Projects\\maze-algorithms\\src\\components\\Controls\\Slider.js":"9","D:\\Code\\Projects\\maze-algorithms\\src\\utils\\MazeGenerator.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1938,"mtime":1607970277615,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":4796,"mtime":1608007285530,"results":"15","hashOfConfig":"12"},{"size":5382,"mtime":1608012879923,"results":"16","hashOfConfig":"12"},{"size":1099,"mtime":1607874755242,"results":"17","hashOfConfig":"12"},{"size":372,"mtime":1607670512140,"results":"18","hashOfConfig":"12"},{"size":4133,"mtime":1608008205700,"results":"19","hashOfConfig":"12"},{"size":578,"mtime":1607966191053,"results":"20","hashOfConfig":"12"},{"size":19143,"mtime":1608016625860,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1p0ubig",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":26,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Code\\Projects\\maze-algorithms\\src\\index.js",[],["46","47"],"D:\\Code\\Projects\\maze-algorithms\\src\\App.js",["48"],"import logo from './logo.svg';\nimport './App.css';\nimport AppCanvas from './components/AppCanvas';\nimport { createContext, useEffect, useReducer, useRef, useState } from 'react';\nimport Controls from './components/Controls';\n\nfunction appStateReducer(state, action){\n\tswitch(action.type){\n\t\tcase \"UpdateComputationTime\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcomputationTime: action.payload\n\t\t\t}\n\t\tcase \"UpdateMaze\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmaze: action.payload\n\t\t\t}\n\t\tcase \"UpdateGrid\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tgrid: action.payload.grid,  \n\t\t\t\torigin: action.payload.origin\n\t\t\t}\n\t\tcase \"ResizeCanvas\":\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcanvasSize: action.payload\n\t\t\t}\n\t\tdefault:\n\t\t\tconsole.error(`Unknown AppState action type ${action.type}`);\t\n\t\t\treturn state;\n\t}\n}\n\nexport const AppStateContext = createContext();\n\nfunction App() {\n\n\tconst [appState, dispatch] = useReducer(appStateReducer, {})\n\tconst [frameSize, setFrameSize] = useState({ height: 0, width: 0})\n\tconst [canvasSize, setCanvasSize] = useState(0);\n\tconst appFrameRef = useRef();\n\n\tconst windowResizeHandler = () => {\n\t\tsetFrameSize({\n\t\t\theight: appFrameRef.current.getBoundingClientRect().height,\n\t\t\twidth: appFrameRef.current.getBoundingClientRect().width\n\t\t});\n\t}\n\n\t// Register window resize handler on load and initialize frameSize\n\tuseEffect(() => {\n\t\twindowResizeHandler();\n\t\tdocument.addEventListener(\"resize\", windowResizeHandler);\n\t}, []);\n\n\t// Update the canvas size to match the frame size\n\tuseEffect(() => {\n\t\tconst newSize = Math.min(frameSize.height, frameSize.width) * 0.9;\n\t\tsetCanvasSize(newSize);\n\t\tdispatch({\n\t\t\ttype: \"ResizeCanvas\",\n\t\t\tpayload: newSize\n\t\t})\n\t}, [frameSize]);\n\n\treturn (\n\t<div className=\"App\" ref={appFrameRef}>\n\t\t<AppStateContext.Provider value={[appState, dispatch]}>\n\t\t\t<Controls canvasSize={canvasSize}/>\n\t\t\t{canvasSize > 0 && <AppCanvas canvasSize={canvasSize} />}\n\t\t</AppStateContext.Provider>\n\t</div>\n\t);\n}\n\nexport default App;\n","D:\\Code\\Projects\\maze-algorithms\\src\\reportWebVitals.js",[],"D:\\Code\\Projects\\maze-algorithms\\src\\components\\AppCanvas\\index.js",["49","50","51","52"],"import p5 from \"p5\";\r\nimport { useContext, useEffect, useReducer, useRef, useState } from \"react\";\r\nimport { AppStateContext } from \"../../App\";\r\n\r\nfunction renderConfigReducer(state, action){\r\n\treturn {\r\n\t\t...state,\r\n\t\taction\r\n\t}\r\n}\r\n\r\nexport default function AppCanvas(props){\r\n\r\n\tconst [appState] = useContext(AppStateContext);\r\n\tconst [renderer, setRenderer] = useState(null);\r\n\r\n\tconst [renderConfig, dispatchConfig] = useReducer(renderConfigReducer, {\r\n\t\tgrid: {\r\n\t\t\tpoint: {\r\n\t\t\t\tstroke: 3,\r\n\t\t\t\tcolor: \"silver\"\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tstroke: 1,\r\n\t\t\t\tcolor: \"silver\"\r\n\t\t\t}\r\n\t\t},\r\n\t\tmaze: {\r\n\t\t\tstartPoint: {\r\n\t\t\t\tstroke: 7,\r\n\t\t\t\tcolor: \"green\"\r\n\t\t\t},\r\n\t\t\tnodePoint: {\r\n\t\t\t\tstroke: 7,\r\n\t\t\t\tcolor: \"blue\"\r\n\t\t\t},\r\n\t\t\tline: {\r\n\t\t\t\tstroke: 3,\r\n\t\t\t\tcolor: \"cyan\"\r\n\t\t\t}\r\n\t\t}\r\n\t}); \r\n\r\n\tconst canvasRef = useRef();\r\n\r\n\t// Draws the grid using points and the line\r\n\tconst drawGrid = (p5) => {\r\n\t\tp5.background(0);\r\n\t\tif(appState.grid){\r\n\t\t\t\r\n\t\t\tfor(const row of appState.grid.points){\r\n\t\t\t\tfor(const point of row){\r\n\t\t\t\t\t// Draw point\r\n\t\t\t\t\tp5.strokeWeight(renderConfig.grid.point.stroke);\r\n\t\t\t\t\tp5.stroke(renderConfig.grid.point.color);\r\n\t\t\t\t\tconst p = p5.createVector(point.position.x + appState.origin.x, point.position.y + appState.origin.y);\r\n\t\t\t\t\tp5.point(p.x, p.y);\r\n\r\n\t\t\t\t\t// Draw connections which are positive y-axis changes and not directly left\r\n\t\t\t\t\tfor(const neighbour of point.neighbours){\r\n\t\t\t\t\t\tconst diff = {\r\n\t\t\t\t\t\t\tx: neighbour.position.x - point.position.x,\r\n\t\t\t\t\t\t\ty: neighbour.position.y - point.position.y\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Draw line\r\n\t\t\t\t\t\tp5.stroke(renderConfig.grid.line.color);\r\n\t\t\t\t\t\tp5.strokeWeight(renderConfig.grid.line.stroke);\r\n\t\t\t\t\t\tp5.line(p.x, p.y, neighbour.position.x + appState.origin.x, neighbour.position.y + appState.origin.y);\r\n\t\t\t\t\t}\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Draws the maze and shows the path connections\r\n\tconst drawMaze = (p5) => {\r\n\t\tif(appState.maze){\r\n\t\t\t// Draw the graph lines\r\n\t\t\tfor(const node of appState.maze.graph){\r\n\t\t\t\t\r\n\t\t\t\t// Draw node connections\r\n\t\t\t\tfor(const connection of node.connections){\r\n\t\t\t\t\tp5.stroke(renderConfig.maze.line.color);\r\n\t\t\t\t\tp5.strokeWeight(renderConfig.maze.line.stroke)\r\n\t\t\t\t\tp5.line(node.point.position.x + appState.origin.x, \r\n\t\t\t\t\t\tnode.point.position.y + appState.origin.y, \r\n\t\t\t\t\t\tconnection.position.x + appState.origin.x,\r\n\t\t\t\t\t\tconnection.position.y + appState.origin.y);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Draw the maze points\r\n\t\t\tfor(const node of appState.maze.graph){\r\n\t\t\t\t// Draw node point \r\n\t\t\t\tp5.stroke(renderConfig.maze.nodePoint.color);\r\n\t\t\t\tp5.strokeWeight(renderConfig.maze.nodePoint.stroke)\r\n\t\t\t\tp5.point(node.point.position.x + appState.origin.x, node.point.position.y + appState.origin.y);\r\n\t\t\t}\r\n\r\n\t\t\t// Draw starting point\r\n\t\t\tp5.stroke(renderConfig.maze.startPoint.color);\r\n\t\t\tp5.strokeWeight(renderConfig.maze.startPoint.stroke)\r\n\t\t\tp5.point(appState.maze.start.position.x + appState.origin.x, appState.maze.start.position.y + appState.origin.y);\r\n\t\t}\r\n\t}\r\n\r\n\t// DEBUGGING draws the maze outline\r\n\tconst drawOutline = (p5) => {\r\n\t\tlet color = {\r\n\t\t\tlayer: 40,\r\n\t\t\tslice: 40,\r\n\t\t\tfragment: 70\r\n\t\t}\r\n\t\tlet counter = {\r\n\t\t\tlayer: 1,\r\n\t\t\tslice: 1,\r\n\t\t\tfragment: 1 \r\n\t\t}\r\n\r\n\t\t// Layers\r\n\t\tfor(const layer of appState.maze.outline){\r\n\t\t\tcounter.layer++;\r\n\t\t\tcounter.slice = 1;\r\n\t\t\tfor(const slice of layer){\r\n\t\t\t\tcounter.slice++;\r\n\t\t\t\tcounter.fragment = 1;\r\n\t\t\t\tfor(const fragment of slice){\r\n\t\t\t\t\tcounter.fragment++;\r\n\t\t\t\t\tfor(const row of fragment.subgraph){\r\n\t\t\t\t\t\tfor(const point of row){\r\n\t\t\t\t\t\t\t// if(point.weight){\r\n\t\t\t\t\t\t\t// p5.stroke(255 * point.weight,255 * point.weight,255 * point.weight);\r\n\t\t\t\t\t\t\tp5.stroke((color.layer * counter.layer) * 2 / counter.fragment, ((2.2 * counter.slice * color.slice - color.layer * counter.layer)) * 2 / counter.fragment, (color.layer * counter.slice) * 2 / counter.fragment);\r\n\t\t\t\t\t\t\tp5.strokeWeight(renderConfig.maze.nodePoint.stroke);\r\n\t\t\t\t\t\t\tp5.point(point.position.x + appState.origin.x, point.position.y + appState.origin.y);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Initialize p5 sketch methods\r\n\tconst sketch = (p5) => {\r\n\r\n\t\t// Setup canvas size\r\n\t\tp5.setup = () => {\r\n\t\t\tp5.createCanvas(props.canvasSize, props.canvasSize);\r\n\t\t\tp5.noLoop();\r\n\t\t}\r\n\r\n\t\t// Draw to the canvas\r\n\t\tp5.draw = () => {  \r\n\t\t\tdrawGrid(p5);\r\n\t\t\tdrawMaze(p5);\r\n\t\t}\r\n\t}\r\n\r\n\t// When appState.grid or the renderer changes, draw the grid\r\n\tuseEffect(()=>{\r\n\t\tif(renderer && appState.grid){\r\n\t\t\trenderer.clear();\r\n\t\t\tdrawGrid(renderer);\r\n\t\t\tdrawOutline(renderer);\r\n\t\t\tdrawMaze(renderer);\r\n\t\t}\r\n\t}, [appState.maze, appState.origin, appState.grid, renderer]);\r\n\r\n\t// Setup the canvas on load\r\n\tuseEffect(() => {\r\n\t\tconst p5Instance = new p5(sketch, canvasRef.current);\r\n\t\tsetRenderer(p5Instance);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div ref={canvasRef}></div>\r\n\t);\r\n}\r\n","D:\\Code\\Projects\\maze-algorithms\\src\\components\\Controls\\index.js",["53","54","55","56","57","58","59"],"D:\\Code\\Projects\\maze-algorithms\\src\\utils\\SquareGrid.js",[],"D:\\Code\\Projects\\maze-algorithms\\src\\utils\\GridPoint.js",[],"D:\\Code\\Projects\\maze-algorithms\\src\\utils\\HexGrid.js",[],"D:\\Code\\Projects\\maze-algorithms\\src\\components\\Controls\\Slider.js",["60"],"import React, { useEffect, useState } from \"react\";\r\n\r\nexport default function Slider(props){\r\n\tconst [value, setValue] = useState(20);\r\n\r\n\tconst bounds = {\r\n\t\tmin: 1,\r\n\t\tmax: 100,\r\n\t\tstep: 1\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.output.current = value;\r\n\t}, [value]);\r\n\r\n\treturn (\r\n\t\t<div className=\"sliderContainer\">\r\n\t\t\t<div className=\"sliderHeader\">\r\n\t\t\t\tCellSize: <span>{value}</span>\r\n\t\t\t</div>\r\n\t\t\t<input className=\"sliderInput\" min={bounds.min} max={bounds.max} step={bounds.step} onChangeCapture={ (event) => setValue(event.target.value)} type=\"range\"/>\r\n\t\t</div>\r\n\t);\r\n}","D:\\Code\\Projects\\maze-algorithms\\src\\utils\\MazeGenerator.js",["61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":12},{"ruleId":"91","severity":1,"message":"95","line":17,"column":23,"nodeType":"93","messageId":"94","endLine":17,"endColumn":37},{"ruleId":"91","severity":1,"message":"96","line":61,"column":13,"nodeType":"93","messageId":"94","endLine":61,"endColumn":17},{"ruleId":"97","severity":1,"message":"98","line":169,"column":5,"nodeType":"99","endLine":169,"endColumn":62,"suggestions":"100"},{"ruleId":"97","severity":1,"message":"101","line":175,"column":5,"nodeType":"99","endLine":175,"endColumn":7,"suggestions":"102"},{"ruleId":"91","severity":1,"message":"103","line":1,"column":47,"nodeType":"93","messageId":"94","endLine":1,"endColumn":56},{"ruleId":"91","severity":1,"message":"104","line":83,"column":20,"nodeType":"93","messageId":"94","endLine":83,"endColumn":32},{"ruleId":"91","severity":1,"message":"105","line":87,"column":21,"nodeType":"93","messageId":"94","endLine":87,"endColumn":34},{"ruleId":"91","severity":1,"message":"106","line":88,"column":21,"nodeType":"93","messageId":"94","endLine":88,"endColumn":34},{"ruleId":"107","severity":1,"message":"108","line":116,"column":17,"nodeType":"109","messageId":"110","endLine":116,"endColumn":49},{"ruleId":"107","severity":1,"message":"108","line":134,"column":11,"nodeType":"109","messageId":"110","endLine":134,"endColumn":43},{"ruleId":"107","severity":1,"message":"108","line":150,"column":10,"nodeType":"109","messageId":"110","endLine":150,"endColumn":42},{"ruleId":"97","severity":1,"message":"111","line":14,"column":5,"nodeType":"99","endLine":14,"endColumn":12,"suggestions":"112"},{"ruleId":"91","severity":1,"message":"113","line":1,"column":8,"nodeType":"93","messageId":"94","endLine":1,"endColumn":17},{"ruleId":"91","severity":1,"message":"114","line":2,"column":8,"nodeType":"93","messageId":"94","endLine":2,"endColumn":15},{"ruleId":"91","severity":1,"message":"115","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":18},{"ruleId":"116","severity":1,"message":"117","line":99,"column":41,"nodeType":"118","messageId":"119","endLine":99,"endColumn":115},{"ruleId":"91","severity":1,"message":"120","line":116,"column":14,"nodeType":"93","messageId":"94","endLine":116,"endColumn":15},{"ruleId":"116","severity":1,"message":"121","line":143,"column":42,"nodeType":"118","messageId":"119","endLine":143,"endColumn":127},{"ruleId":"91","severity":1,"message":"122","line":216,"column":10,"nodeType":"93","messageId":"94","endLine":216,"endColumn":26},{"ruleId":"91","severity":1,"message":"123","line":230,"column":10,"nodeType":"93","messageId":"94","endLine":230,"endColumn":25},{"ruleId":"124","severity":1,"message":"125","line":241,"column":10,"nodeType":"126","messageId":"127","endLine":241,"endColumn":12},{"ruleId":"124","severity":1,"message":"128","line":241,"column":16,"nodeType":"126","messageId":"127","endLine":241,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":241,"column":16,"nodeType":"126","messageId":"127","endLine":241,"endColumn":17},{"ruleId":"124","severity":1,"message":"128","line":241,"column":20,"nodeType":"126","messageId":"127","endLine":241,"endColumn":23},{"ruleId":"124","severity":1,"message":"129","line":243,"column":20,"nodeType":"126","messageId":"127","endLine":243,"endColumn":21},{"ruleId":"124","severity":1,"message":"129","line":243,"column":24,"nodeType":"126","messageId":"127","endLine":243,"endColumn":27},{"ruleId":"124","severity":1,"message":"129","line":244,"column":20,"nodeType":"126","messageId":"127","endLine":244,"endColumn":21},{"ruleId":"124","severity":1,"message":"129","line":244,"column":24,"nodeType":"126","messageId":"127","endLine":244,"endColumn":27},{"ruleId":"124","severity":1,"message":"129","line":256,"column":13,"nodeType":"126","messageId":"127","endLine":256,"endColumn":14},{"ruleId":"124","severity":1,"message":"129","line":256,"column":17,"nodeType":"126","messageId":"127","endLine":256,"endColumn":20},{"ruleId":"124","severity":1,"message":"125","line":258,"column":14,"nodeType":"126","messageId":"127","endLine":258,"endColumn":16},{"ruleId":"124","severity":1,"message":"125","line":258,"column":20,"nodeType":"126","messageId":"127","endLine":258,"endColumn":21},{"ruleId":"124","severity":1,"message":"128","line":258,"column":20,"nodeType":"126","messageId":"127","endLine":258,"endColumn":21},{"ruleId":"124","severity":1,"message":"128","line":258,"column":24,"nodeType":"126","messageId":"127","endLine":258,"endColumn":27},{"ruleId":"130","severity":1,"message":"131","line":348,"column":4,"nodeType":"132","messageId":"133","endLine":351,"endColumn":11},{"ruleId":"134","severity":1,"message":"135","line":378,"column":3,"nodeType":"136","messageId":"137","endLine":391,"endColumn":4},{"ruleId":"130","severity":1,"message":"131","line":388,"column":4,"nodeType":"132","messageId":"133","endLine":390,"endColumn":11},{"ruleId":"91","severity":1,"message":"138","line":496,"column":11,"nodeType":"93","messageId":"94","endLine":496,"endColumn":20},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'dispatchConfig' is assigned a value but never used.","'diff' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'drawGrid', 'drawMaze', and 'drawOutline'. Either include them or remove the dependency array.","ArrayExpression",["141"],"React Hook useEffect has a missing dependency: 'sketch'. Either include it or remove the dependency array.",["142"],"'useEffect' is defined but never used.","'setMazeStart' is assigned a value but never used.","'setGridConfig' is assigned a value but never used.","'setMazeConfig' is assigned a value but never used.","no-new-wrappers","Do not use Number as a constructor.","NewExpression","noConstructor","React Hook useEffect has a missing dependency: 'props.output'. Either include it or remove the dependency array.",["143"],"'GridPoint' is defined but never used.","'HexGrid' is defined but never used.","'SquareGrid' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'largestIndex', 'largestIndex'.","ArrowFunctionExpression","unsafeRefs","'_' is assigned a value but never used.","Function declared in a loop contains unsafe references to variable(s) 'largestFragIndex', 'largestFragIndex'.","'generateRingMaze' is defined but never used.","'generateWeights' is defined but never used.","no-mixed-operators","Unexpected mix of '<<' and '|'.","BinaryExpression","unexpectedMixedOperator","Unexpected mix of '|' and '>>>'.","Unexpected mix of '^' and '>>>'.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'gateArray' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [appState.maze, appState.origin, appState.grid, renderer, drawGrid, drawOutline, drawMaze]",{"range":"150","text":"151"},"Update the dependencies array to be: [sketch]",{"range":"152","text":"153"},"Update the dependencies array to be: [props.output, value]",{"range":"154","text":"155"},[4536,4593],"[appState.maze, appState.origin, appState.grid, renderer, drawGrid, drawOutline, drawMaze]",[4738,4740],"[sketch]",[257,264],"[props.output, value]"]